[package]
name = "fiqh_core"
version = "0.1.0"
repository.workspace = true
license.workspace = true
edition.workspace = true
workspace = "../.."

# Add library types for mobile bindings
[lib]
crate-type = ["lib", "staticlib", "cdylib"]
name = "fiqh_core"

[dependencies]
# Core async runtime
tokio.workspace = true
crossbeam.workspace = true
futures = "0.3.30"
futures-util = "0.3.30"
async-trait = "0.1.83"
async-stream = "0.3.6"

# Serialization
serde.workspace = true
serde_json.workspace = true
borsh.workspace = true

# Error handling
anyhow.workspace = true
thiserror.workspace = true

# HTTP client and scraping
reqwest = { workspace = true, default-features = false, features = [
    "rustls-tls",
    "json",
] }
scraper = "0.23.1"
select = "0.6.0"

# Time and URLs
chrono.workspace = true
url.workspace = true
urlencoding.workspace = true

# AI and ML dependencies (core functionality)
rig-core = { version = "0.0.6", default-features = false, optional = true }
# Removed langchain-rust - not needed, rig-core provides everything!
qdrant-client = { version = "1.10.0", default-features = false, features = [
    "serde",
], optional = true }
openai-api-rs = { version = "6.0.7", default-features = false, optional = true }
tiktoken-rs = { version = "0.7.0", optional = true }

# Vector operations and embeddings
faiss = { version = "0.12.0", optional = true }
candle-core = { version = "0.9.1", optional = true }
candle-nn = { version = "0.9.1", optional = true }
# Removed text-embeddings-inference-client - doesn't exist on crates.io

# Audio processing (for STT mock)
rodio = { version = "0.21.1", optional = true }
cpal = { version = "0.16.0", optional = true }

# Solana SDK - Made optional for feature gating and Android compatibility
solana-client = { version = "2.2", default-features = false }
solana-program = { version = "2.2", default-features = false }
solana-account-decoder = { version = "2.2", default-features = false }
solana-pubkey = { version = "2.2", default-features = false, features = [
    "serde",
    "borsh",
] }
solana-transaction = { version = "2.2", default-features = false }
spl-token = { version = "8.0.0", default-features = false }

# Web API framework
axum.workspace = true
tower.workspace = true
tower-http.workspace = true
hyper.workspace = true

# Database and storage
sled = "0.34.7"
redb = "2.1.3"

# Logging
tracing.workspace = true
tracing-subscriber.workspace = true

# Utilities
uuid.workspace = true
rand.workspace = true

# UniFFI for mobile bindings
uniffi = { version = "0.29.3", features = ["tokio", "cli"], optional = true }

# Configuration
dotenvy.workspace = true

# Additional dependencies for chain processing
regex = "1.10.4"
lazy_static = "1.4.0"
dashmap = "6.1.0"

[dev-dependencies]
tokio-test = "0.4.4"
mockall = "0.13.0"
tempfile = "3.13.0"
criterion.workspace = true
wiremock = "0.6.0"

# Mobile-specific features
[features]
default = ["mobile", "ai"]
mobile = ["uniffi"]
ai = ["rig-core", "qdrant-client", "openai-api-rs", "tiktoken-rs"]
audio = ["rodio", "cpal"]

# Build dependencies only for non-Android targets
[build-dependencies]
uniffi = { version = "0.29.3", features = ["build"] }

# Add uniffi-bindgen binary to the same crate (Mozilla's single-crate approach)
[[bin]]
name = "uniffi-bindgen"
path = "src/bin/uniffi-bindgen.rs"

# Android-specific dependencies to avoid cross-compilation issues
[target.'cfg(target_os = "android")'.dependencies]
# Remove OpenSSL dependencies for Android to avoid atomic linking issues
openssl.workspace = true
native-tls.workspace = true

[lints]
workspace = true
